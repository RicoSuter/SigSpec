public class {{ Name }}HubClient {
    private readonly HubConnection _connection;
   
    public {{Name}}HubClient(HubConnection connection) {
        _connection = connection;
    }
{% comment %}
{% for operation in Operations -%}

{% if operation.IsObservable -%}
    public IStreamResult<{{ operation.ReturnType.Type }}> {{ operation.Name }}({% for parameter in operation.Parameters %} {{ parameter.Type }} {{ parameter.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %})
    {
        return _connection.Stream("{{ operation.Name }}"{% for parameter in operation.Parameters %}{% if forloop.last == false %}, {% endif %}{{parameter.Type}} {{ parameter.Name }}{% endfor %});
    }
{%     elseif operation.HasReturnType -%}
    public Task<{{ operation.ReturnType.Type }}> {{ operation.Name }}({% for parameter in operation.Parameters %} {{ parameter.Type }} {{ parameter.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %})
    {
        return _connection.Invoke("{{ operation.Name }}", {% for parameter in operation.Parameters %}, {{ parameter.Name }}{% endfor %});
    }
{%     else -%}
    public Task {{ operation.Name }}({% for parameter in operation.Parameters %}{{ parameter.Type }} {{ parameter.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %})
    {
        return _connection.Invoke("{{ operation.Name }}", {% for parameter in operation.Parameters %}{{ parameter.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %});
    }
{%     endif -%}
{% endfor -%}
{% endcomment %}

{% for operation in Callbacks -%}
    public delegate Task On{{ operation.Name }}({% for parameter in operation.Parameters %}{{ parameter.Type }} {{ parameter.Name }}{% if forloop.last == false %}, {% endif %}{% endfor %});
{% if operation.Parameters.size == 0 %}
    public IDisposable RegisterFor{{ operation.Name }}(On{{ operation.Name }} callback)
    {
        return _connection.On("{{ operation.Name }}", callback.Invoke);
    }
    public IDisposable RegisterFor{{ operation.Name }}(Action callback)
    {
        return _connection.On("{{ operation.Name }}", callback);
    }
{% else %}
    public IDisposable RegisterFor{{ operation.Name }}(On{{ operation.Name }} callback)
    {
        return _connection.On<{% for parameter in operation.Parameters %}{{ parameter.Type }}{% if forloop.last == false %}, {% endif %}{% endfor %}>("{{ operation.Name }}", callback.Invoke);
    }
    public IDisposable RegisterFor{{ operation.Name }}(Action<{% for parameter in operation.Parameters %}{{ parameter.Type }}{% if forloop.last == false %}, {% endif %}{% endfor %}> callback)
    {
        return _connection.On("{{ operation.Name }}", callback);
    }
{% endif %}
{% endfor -%}
}
